#summary Getting started guide for python mapper library
#labels Featured

== Adding the !MapReduce Library To Your Application ==

Checkout the mapreduce folder into your application directory:

{{{
svn checkout http://appengine-mapreduce.googlecode.com/svn/trunk/python/src/mapreduce
}}}

Add the mapreduce handler to your app.yaml:

{{{
handlers:
- url: /mapreduce(/.*)?
  script: mapreduce/main.py
  login: admin
}}}

== Defining a Mapper ==

Create a function taking a single argument. It will be called for each value returned by the input reader (later in the guide, we'll discuss the type of values each input reader returns). You can do anything in a mapper that you would normally do in a task queue invocation (e.g. interact with memcache or the datastore using the normal API). However, for efficiency, you may want to look at the sections "Modifying Datastore entities in the Mapper" and "Counters" below for additional operations only available in the mapper. An example mapper for the !DatastoreInputReader might look like:

{{{
def process(entity):
  # do something with entity here.
}}}

Register the mapper in mapreduce.yaml:

{{{
mapreduce:
- name: <Some descriptive name for UI>
  mapper:
    input_reader: mapreduce.input_readers.DatastoreInputReader
    handler: <your handler name, e.g. main.process>
    params:
    - name: entity_kind
      default: <your entity name, e.g. main.MyEntity>
}}}

==Running the Mapper==

Navigate your browser to `http://<your_app_id>.appspot.com/mapreduce/`
Click the launch button to start registered mapreduce. Go to the mapreduce detail page to observe its status and control its execution.

==Modifying Datastore entities in the Mapper==
Mapper code can perform any kind of activity. But it's much more efficient to yield datastore mutation operations than to modify the datastore directly:

{{{
from mapreduce import operation as op
def process(entity):
 # change entity
 yield op.db.Put(entity)
 # or yield op.db.Delete(entity)
}}}

All operations will be batched using a mutation pool. 

==Counters==

To change counter value yield a counter operation:

{{{
from mapreduce import operation as op
def process(entity):
 yield op.counters.Increment("counter1")
 yield op.counters.Increment("counter2", 30)
 yield op.counters.Increment("counter3", -5)
}}}

==Advanced Topics==

Consult [UserGuidePython Python Mapreduce User Guide] for more advanced topics of library usage.