#summary Highlights recent changes to the library

== Recent Python Library Changes ==

Some notable changes in the Python library:
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=184 r184] touches up the mapreduce sample application, so you should find it to be much easier to use now. See the main project page for screenshots and a link to the video showing how to use it.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=159 r159] integrates mapper library with Files API.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=136 r136] uses scatter index to split shards. This should generate more equal shards and works much faster.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=131 r131] enables starting mapper jobs as part of transaction.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=129 r129] introduces NamespaceInputReader which iterates over available namespaces.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=111 r111] supports iterating over datasets with namespaces.
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=76 r76] makes job starting process more bulletproof by splitting it into two phases, and moving seconds phase to taskqueue
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=74 r74] adds support for key-only input reader
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=73 r73] adds support for BlobstoreZipLineInputReader
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=66 r66] restores all code comments in source files
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=42 r42] allows you to implement your own mutation pools
  * [http://code.google.com/p/appengine-mapreduce/source/detail?r=40 r40] adds control api to programmatically start jobs